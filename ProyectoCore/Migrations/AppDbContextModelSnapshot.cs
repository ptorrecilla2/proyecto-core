// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoCore.Data;

#nullable disable

namespace ProyectoCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoCore.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Calle Alta, 1",
                            City = "Madrid",
                            Contact = "empresauno@gmail.com",
                            Country = "España",
                            Email = "empresauno@gmail.com",
                            Name = "EmpresaUno",
                            Phone = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Calle Baja, 2",
                            City = "Barcelona",
                            Contact = "empresados@gmail.com",
                            Country = "España",
                            Email = "empresados@gmail.com",
                            Name = "EmpresaDos",
                            Phone = "987654321"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Calle Media, 3",
                            City = "Valencia",
                            Contact = "empresatres@gmail.com",
                            Country = "España",
                            Email = "empresatres@gmail.com",
                            Name = "EmpresaTres",
                            Phone = "123456789"
                        });
                });

            modelBuilder.Entity("ProyectoCore.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 4, 6, 4, 8, 27, 927, DateTimeKind.Local).AddTicks(7672),
                            Description = "Comentario de prueba 1",
                            TaskId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 4, 6, 4, 8, 27, 927, DateTimeKind.Local).AddTicks(7676),
                            Description = "Comentario de prueba 2",
                            TaskId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ProyectoCore.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Project", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            Name = "Project1"
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            Name = "Project2"
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            Name = "Project3"
                        });
                });

            modelBuilder.Entity("ProyectoCore.Models.ProjectTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectTask", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FinalDate = new DateTime(2024, 4, 13, 4, 8, 27, 927, DateTimeKind.Local).AddTicks(7641),
                            InitialDate = new DateTime(2024, 4, 6, 4, 8, 27, 927, DateTimeKind.Local).AddTicks(7579),
                            Name = "Task1",
                            Priority = 2,
                            ProjectId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            FinalDate = new DateTime(2024, 4, 11, 4, 8, 27, 927, DateTimeKind.Local).AddTicks(7648),
                            InitialDate = new DateTime(2024, 4, 6, 4, 8, 27, 927, DateTimeKind.Local).AddTicks(7646),
                            Name = "Task2",
                            Priority = 1,
                            ProjectId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            FinalDate = new DateTime(2024, 4, 9, 4, 8, 27, 927, DateTimeKind.Local).AddTicks(7652),
                            InitialDate = new DateTime(2024, 4, 6, 4, 8, 27, 927, DateTimeKind.Local).AddTicks(7651),
                            Name = "Task3",
                            Priority = 0,
                            ProjectId = 3,
                            Status = 2
                        });
                });

            modelBuilder.Entity("ProyectoCore.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Type = 3
                        },
                        new
                        {
                            Id = 4,
                            Type = 2
                        });
                });

            modelBuilder.Entity("ProyectoCore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            LastName = "Admin",
                            Name = "Admin",
                            Password = "12345",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "juan@gmail.com",
                            LastName = "García",
                            Name = "Juan",
                            Password = "123456",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "ana@gmail.com",
                            LastName = "González",
                            Name = "Ana",
                            Password = "123456",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 4,
                            Email = "maria@gmail.com",
                            LastName = "Rodríguez",
                            Name = "María",
                            Password = "123456",
                            RoleId = 4
                        },
                        new
                        {
                            Id = 5,
                            Email = "sara@gmail",
                            LastName = "Pérez",
                            Name = "Sara",
                            Password = "123456",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("ProyectoCore.Models.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<string>("TaskRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTask", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TaskId = 1,
                            TaskRole = "Dev",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            TaskId = 1,
                            TaskRole = "Manager",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            TaskId = 2,
                            TaskRole = "Dev",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            TaskId = 2,
                            TaskRole = "Tester",
                            UserId = 4
                        });
                });

            modelBuilder.Entity("ProyectoCore.Models.Comment", b =>
                {
                    b.HasOne("ProyectoCore.Models.ProjectTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoCore.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProyectoCore.Models.Project", b =>
                {
                    b.HasOne("ProyectoCore.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("ProyectoCore.Models.ProjectTask", b =>
                {
                    b.HasOne("ProyectoCore.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProyectoCore.Models.User", b =>
                {
                    b.HasOne("ProyectoCore.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProyectoCore.Models.UserTask", b =>
                {
                    b.HasOne("ProyectoCore.Models.ProjectTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoCore.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
